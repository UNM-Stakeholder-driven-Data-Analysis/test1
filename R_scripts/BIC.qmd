---
title:  "BIC: Rio grande river anions"
author: Your Name
date:   last-modified
description: |
  Tonny Nyonga
format:
  html:
    theme:            litera
    highlight-style:  atom-one
    page-layout:      full      # article, full   # https://quarto.org/docs/output-formats/page-layout.html
    toc:              true
    toc-location:     body  # body, left, right
    number-sections:  false
    self-contained:         false     # !!! this can cause a render error
    code-overflow:          scroll    # scroll, wrap
    code-block-bg:          true
    code-block-border-left: "#30B0E0"
    code-copy:              false     # true, false, hover a copy buttom in top-right of code block
fig-width:                  6
fig-height:                 4
fig-align:                  center    # default, left, right, or center
execute: # https://quarto.org/docs/computations/execution-options.html, https://quarto.org/docs/computations/r.html
  cache:    false   # false, true
  echo:     true    # true, false  Include the source code in output
  warning:  true    # true, false  Include warnings in the output.
  error:    true    # true, false  Include errors in the output (note that this implies that errors executing code will not halt processing of the document).


#### load and tidy data ####

```{r}
library(erikmisc)
library(tidyverse)
```



```{r}
setwd("C:/Users/marag.DESKTOP-NEKBNJE/OneDrive/Desktop/Stakeholder data analysis/test1/Data")
dat = read.csv("anionsf.csv")
dat <- read.csv("anionsf.csv", na.strings = c("."))



str(dat)
# reduce to 3 sites for the purposes of most of this tutorial
dat = dat[dat$Samplingtype =="River"| dat$Samplingtype =="Ditch"| dat$Samplingtype =="Center",]

#dat = dat[dat$SiteName =="Bobcat"| dat$SiteName =="Badger"| dat$SiteName =="Harrison"| dat$SiteName =="Savannah"| dat$SiteName =="Belen",]
dat = dat[dat$SiteName =="Badger"| dat$SiteName =="Bobcat"| dat$SiteName =="Savannah"| dat$SiteName =="Harrison"| dat$SiteName =="Belen",]

#arrange from north to south
dat %>% arrange("Badger","Bobcat","Savannah","Harrison","Belen")

#remove time sampling column
dat <- select(dat, - c("Timesampling", "Timeofsitearrival"))

str(dat)


# format date/time: this code worked well to format date, i have dateF and Date
dat$DateF = as.POSIXct(dat$Date, format="%m/%d/%Y %H:%M", tz="US/Mountain")
dat$Date = as.POSIXct(dat$Date, format="%m/%d/%Y %H:%M", tz="US/Mountain")
dat$Datecombined = as.POSIXct(dat$Datecombined, format="%m/%d/%Y %H:%M", tz="US/Mountain")
str(dat)
#dat$datetime_NM = as.POSIXct(dat$Sample_DateTime, format="%m/%d/%y %H:%M", tz="US/Mountain")

# convert characters that should be factors (categories) to factors
dat$SiteName = as.factor(dat$SiteName)
dat$Samplingtype = as.factor(dat$Samplingtype)

# convert water quality data to numeric
dat$Bromide = as.numeric(dat$Bromide)
dat$Fluoride = as.numeric(dat$Fluoride)
dat$NH4N  = as.numeric(dat$NH4N )
dat$Sulfate = as.numeric(dat$Sulfate)
dat$Chloride = as.numeric(dat$Chloride)
dat$PhosphateP = as.numeric(dat$PhosphateP)
dat$Turbidity = as.numeric(dat$Turbidity)
dat$condTemp = as.numeric(dat$condTemp)
dat$DO  = as.numeric(dat$DO)
dat$NitrateN  = as.numeric(dat$NitrateN)
dat$pH1   = as.numeric(dat$pH1)
dat$pHTemp    = as.numeric(dat$pHTemp)
dat$Conductivity    = as.numeric(dat$Conductivity )
dat$DOTemp   = as.numeric(dat$DOTemp)
dat$DoPercent  = as.numeric(dat$DoPercent)
dat$Airtemp   = as.numeric(dat$Airtemp)
dat$Day   = as.numeric(dat$Day)
dat$Nitrite  = as.numeric(dat$Nitrite)

#datS <- select(dat, c("SiteName","Airtemp", "DoPercent", "DOTemp", "Conductivity", "condTemp" ,"pH1" , "Chloride", "Sulfate"))
#str(datS)

str(dat)


```


```{r}

lm_fit_two <-
lm( 
Sulfate ~ (PhosphateP  + NH4N + Chloride  + DO + Turbidity + pH1  )^2
, data = dat
)



###Assses model assumptions for two way interraction

lm_fit_BIC <-
step(
lm_fit_two
, scope =
list(
upper = Sulfate ~ (PhosphateP  + NH4N + Chloride  + DO + Turbidity + pH1  )^2, data = dat
, lower = Sulfate ~ 1
)
, direction = "backward"
, test = "F"
, trace = 1
, k = log(nrow(dat)) # condition_3_criterion takes effect here
)
```


```{r}
lm_fit_final <- lm_fit_AIC
car::Anova(lm_fit_final, type = 3)

out_cont2 <-
e_plot_model_contrasts(
fit = lm_fit_BIC
, dat_cont = dat_pulse3
, sw_print = FALSE
, sw_TWI_plots_keep = c("singles", "both", "all")[2]
, sw_TWI_both_orientation = c("wide", "tall")[1]
)

```

